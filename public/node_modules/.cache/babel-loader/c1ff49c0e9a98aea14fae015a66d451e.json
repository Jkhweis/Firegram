{"ast":null,"code":"import { useState, useEffect } from 'react';\nimport { ref, uploadBytesResumable, getDownloadURL } from 'firebase/storage';\nimport { projectStorage, projectFirestore, timestamp } from '../firebase/config';\n\nconst useStorage = file => {\n  const [progress, setProgress] = useState(0);\n  const [error, setError] = useState(null);\n  const [url, setUrl] = useState(null);\n  useEffect(() => {\n    const storageRef = ref(projectStorage, file.name);\n    const collectionRef = projectFirestore.collection('images');\n    const uploadTask = uploadBytesResumable(storageRef, file);\n    uploadTask.on('state_changed', snapshot => {\n      let percentage = snapshot.bytesTransferred / snapshot.totalBytes * 100;\n      setProgress(percentage);\n    }, err => {\n      setError(err);\n    }, () => {\n      getDownloadURL(uploadTask.snapshot.ref).then(url => setUrl(url));\n      collectionRef.add({\n        url,\n        createdAt\n      });\n    });\n  }, [file]);\n  return {\n    progress,\n    url,\n    error\n  };\n};\n\nexport default useStorage;","map":{"version":3,"sources":["/Users/joykhalil/Desktop/React Projects/firegram/src/hooks/useStorage.js"],"names":["useState","useEffect","ref","uploadBytesResumable","getDownloadURL","projectStorage","projectFirestore","timestamp","useStorage","file","progress","setProgress","error","setError","url","setUrl","storageRef","name","collectionRef","collection","uploadTask","on","snapshot","percentage","bytesTransferred","totalBytes","err","then","add","createdAt"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,GAAT,EAAcC,oBAAd,EAAoCC,cAApC,QAA0D,kBAA1D;AACA,SACEC,cADF,EAEEC,gBAFF,EAGEC,SAHF,QAIO,oBAJP;;AAMA,MAAMC,UAAU,GAAIC,IAAD,IAAU;AAC3B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC,CAAD,CAAxC;AACA,QAAM,CAACY,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACc,GAAD,EAAMC,MAAN,IAAgBf,QAAQ,CAAC,IAAD,CAA9B;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMe,UAAU,GAAGd,GAAG,CAACG,cAAD,EAAiBI,IAAI,CAACQ,IAAtB,CAAtB;AACA,UAAMC,aAAa,GAAGZ,gBAAgB,CAACa,UAAjB,CAA4B,QAA5B,CAAtB;AACA,UAAMC,UAAU,GAAGjB,oBAAoB,CAACa,UAAD,EAAaP,IAAb,CAAvC;AAEAW,IAAAA,UAAU,CAACC,EAAX,CACE,eADF,EAEGC,QAAD,IAAc;AACZ,UAAIC,UAAU,GACXD,QAAQ,CAACE,gBAAT,GAA4BF,QAAQ,CAACG,UAAtC,GAAoD,GADtD;AAEAd,MAAAA,WAAW,CAACY,UAAD,CAAX;AACD,KANH,EAOGG,GAAD,IAAS;AACPb,MAAAA,QAAQ,CAACa,GAAD,CAAR;AACD,KATH,EAUE,MAAM;AACJtB,MAAAA,cAAc,CAACgB,UAAU,CAACE,QAAX,CAAoBpB,GAArB,CAAd,CAAwCyB,IAAxC,CAA8Cb,GAAD,IAASC,MAAM,CAACD,GAAD,CAA5D;AAEAI,MAAAA,aAAa,CAACU,GAAd,CAAkB;AAAEd,QAAAA,GAAF;AAAOe,QAAAA;AAAP,OAAlB;AACD,KAdH;AAgBD,GArBQ,EAqBN,CAACpB,IAAD,CArBM,CAAT;AAuBA,SAAO;AAAEC,IAAAA,QAAF;AAAYI,IAAAA,GAAZ;AAAiBF,IAAAA;AAAjB,GAAP;AACD,CA7BD;;AA+BA,eAAeJ,UAAf","sourcesContent":["import { useState, useEffect } from 'react';\nimport { ref, uploadBytesResumable, getDownloadURL } from 'firebase/storage';\nimport {\n  projectStorage,\n  projectFirestore,\n  timestamp,\n} from '../firebase/config';\n\nconst useStorage = (file) => {\n  const [progress, setProgress] = useState(0);\n  const [error, setError] = useState(null);\n  const [url, setUrl] = useState(null);\n\n  useEffect(() => {\n    const storageRef = ref(projectStorage, file.name);\n    const collectionRef = projectFirestore.collection('images');\n    const uploadTask = uploadBytesResumable(storageRef, file);\n\n    uploadTask.on(\n      'state_changed',\n      (snapshot) => {\n        let percentage =\n          (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n        setProgress(percentage);\n      },\n      (err) => {\n        setError(err);\n      },\n      () => {\n        getDownloadURL(uploadTask.snapshot.ref).then((url) => setUrl(url));\n\n        collectionRef.add({ url, createdAt });\n      }\n    );\n  }, [file]);\n\n  return { progress, url, error };\n};\n\nexport default useStorage;\n"]},"metadata":{},"sourceType":"module"}