{"ast":null,"code":"import _regeneratorRuntime from\"/Users/joykhalil/Desktop/React Projects/firegram/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/joykhalil/Desktop/React Projects/firegram/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/joykhalil/Desktop/React Projects/firegram/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState,useEffect}from'react';import{ref,uploadBytesResumable,getDownloadURL}from'firebase/storage';import{projectStorage,projectFirestore,timestamp}from'../firebase/config';import{addDoc}from'firebase/firestore';import{collection}from'firebase/firestore';var useStorage=function useStorage(file){var _useState=useState(0),_useState2=_slicedToArray(_useState,2),progress=_useState2[0],setProgress=_useState2[1];var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),error=_useState4[0],setError=_useState4[1];var _useState5=useState(null),_useState6=_slicedToArray(_useState5,2),url=_useState6[0],setUrl=_useState6[1];useEffect(function(){var storageRef=ref(projectStorage,file.name);var uploadTask=uploadBytesResumable(storageRef,file);var collectionRef=collection(projectFirestore,'images');uploadTask.on('state_changed',function(snapshot){var percentage=snapshot.bytesTransferred/snapshot.totalBytes*100;setProgress(percentage);},function(err){setError(err);},function(){var createdAt=timestamp;getDownloadURL(uploadTask.snapshot.ref).then(/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(downloadURL){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:console.log('File available at',downloadURL);_context.next=3;return addDoc(collectionRef,{url:downloadURL,createdAt:createdAt});case 3:setUrl(downloadURL);case 4:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}());});},[file]);return{progress:progress,url:url,error:error};};export default useStorage;","map":{"version":3,"sources":["/Users/joykhalil/Desktop/React Projects/firegram/src/hooks/useStorage.js"],"names":["useState","useEffect","ref","uploadBytesResumable","getDownloadURL","projectStorage","projectFirestore","timestamp","addDoc","collection","useStorage","file","progress","setProgress","error","setError","url","setUrl","storageRef","name","uploadTask","collectionRef","on","snapshot","percentage","bytesTransferred","totalBytes","err","createdAt","then","downloadURL","console","log"],"mappings":"kfAAA,OAASA,QAAT,CAAmBC,SAAnB,KAAoC,OAApC,CACA,OAASC,GAAT,CAAcC,oBAAd,CAAoCC,cAApC,KAA0D,kBAA1D,CACA,OACEC,cADF,CAEEC,gBAFF,CAGEC,SAHF,KAIO,oBAJP,CAKA,OAASC,MAAT,KAAuB,oBAAvB,CACA,OAASC,UAAT,KAA2B,oBAA3B,CAEA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,IAAD,CAAU,eACKX,QAAQ,CAAC,CAAD,CADb,wCACpBY,QADoB,eACVC,WADU,8BAEDb,QAAQ,CAAC,IAAD,CAFP,yCAEpBc,KAFoB,eAEbC,QAFa,8BAGLf,QAAQ,CAAC,IAAD,CAHH,yCAGpBgB,GAHoB,eAGfC,MAHe,eAK3BhB,SAAS,CAAC,UAAM,CACd,GAAMiB,CAAAA,UAAU,CAAGhB,GAAG,CAACG,cAAD,CAAiBM,IAAI,CAACQ,IAAtB,CAAtB,CACA,GAAMC,CAAAA,UAAU,CAAGjB,oBAAoB,CAACe,UAAD,CAAaP,IAAb,CAAvC,CACA,GAAMU,CAAAA,aAAa,CAAGZ,UAAU,CAACH,gBAAD,CAAmB,QAAnB,CAAhC,CAEAc,UAAU,CAACE,EAAX,CACE,eADF,CAEE,SAACC,QAAD,CAAc,CACZ,GAAIC,CAAAA,UAAU,CACXD,QAAQ,CAACE,gBAAT,CAA4BF,QAAQ,CAACG,UAAtC,CAAoD,GADtD,CAEAb,WAAW,CAACW,UAAD,CAAX,CACD,CANH,CAOE,SAACG,GAAD,CAAS,CACPZ,QAAQ,CAACY,GAAD,CAAR,CACD,CATH,CAUE,UAAM,CACJ,GAAMC,CAAAA,SAAS,CAAGrB,SAAlB,CACAH,cAAc,CAACgB,UAAU,CAACG,QAAX,CAAoBrB,GAArB,CAAd,CAAwC2B,IAAxC,0FAA6C,iBAAOC,WAAP,kHAC3CC,OAAO,CAACC,GAAR,CAAY,mBAAZ,CAAiCF,WAAjC,EAD2C,sBAErCtB,CAAAA,MAAM,CAACa,aAAD,CAAgB,CAAEL,GAAG,CAAEc,WAAP,CAAoBF,SAAS,CAATA,SAApB,CAAhB,CAF+B,QAG3CX,MAAM,CAACa,WAAD,CAAN,CAH2C,sDAA7C,gEAKD,CAjBH,EAmBD,CAxBQ,CAwBN,CAACnB,IAAD,CAxBM,CAAT,CA0BA,MAAO,CAAEC,QAAQ,CAARA,QAAF,CAAYI,GAAG,CAAHA,GAAZ,CAAiBF,KAAK,CAALA,KAAjB,CAAP,CACD,CAhCD,CAkCA,cAAeJ,CAAAA,UAAf","sourcesContent":["import { useState, useEffect } from 'react';\nimport { ref, uploadBytesResumable, getDownloadURL } from 'firebase/storage';\nimport {\n  projectStorage,\n  projectFirestore,\n  timestamp,\n} from '../firebase/config';\nimport { addDoc } from 'firebase/firestore';\nimport { collection } from 'firebase/firestore';\n\nconst useStorage = (file) => {\n  const [progress, setProgress] = useState(0);\n  const [error, setError] = useState(null);\n  const [url, setUrl] = useState(null);\n\n  useEffect(() => {\n    const storageRef = ref(projectStorage, file.name);\n    const uploadTask = uploadBytesResumable(storageRef, file);\n    const collectionRef = collection(projectFirestore, 'images');\n\n    uploadTask.on(\n      'state_changed',\n      (snapshot) => {\n        let percentage =\n          (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n        setProgress(percentage);\n      },\n      (err) => {\n        setError(err);\n      },\n      () => {\n        const createdAt = timestamp;\n        getDownloadURL(uploadTask.snapshot.ref).then(async (downloadURL) => {\n          console.log('File available at', downloadURL);\n          await addDoc(collectionRef, { url: downloadURL, createdAt });\n          setUrl(downloadURL);\n        });\n      }\n    );\n  }, [file]);\n\n  return { progress, url, error };\n};\n\nexport default useStorage;\n"]},"metadata":{},"sourceType":"module"}