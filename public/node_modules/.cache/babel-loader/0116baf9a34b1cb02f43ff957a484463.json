{"ast":null,"code":"import { useState, useEffect } from 'react';\nimport { onSnapshot, collection } from 'firebase/firestore';\nimport { projectFirestore } from '../firebase/config';\n\nconst useFirestore = collectionName => {\n  const [docs, setDocs] = useState([]);\n  useEffect(() => {\n    const collectionRef = collection(projectFirestore, collectionName);\n    const unsubCol = orderBy(collectionRef, snapshot => {\n      let documents = [];\n      snapshot.docs.forEach(doc => {\n        documents.push({ ...doc.data(),\n          id: doc.id\n        });\n      });\n      setDocs(documents);\n    });\n    return () => unsubCol();\n  }, [collection]);\n  return {\n    docs\n  };\n};\n\nexport default useFirestore;","map":{"version":3,"sources":["/Users/joykhalil/Desktop/React Projects/firegram/src/hooks/useFirestore.js"],"names":["useState","useEffect","onSnapshot","collection","projectFirestore","useFirestore","collectionName","docs","setDocs","collectionRef","unsubCol","orderBy","snapshot","documents","forEach","doc","push","data","id"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,UAAT,EAAqBC,UAArB,QAAuC,oBAAvC;AACA,SAASC,gBAAT,QAAiC,oBAAjC;;AAEA,MAAMC,YAAY,GAAIC,cAAD,IAAoB;AACvC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMQ,aAAa,GAAGN,UAAU,CAACC,gBAAD,EAAmBE,cAAnB,CAAhC;AACA,UAAMI,QAAQ,GAAGC,OAAO,CAACF,aAAD,EAAiBG,QAAD,IAAc;AACpD,UAAIC,SAAS,GAAG,EAAhB;AACAD,MAAAA,QAAQ,CAACL,IAAT,CAAcO,OAAd,CAAuBC,GAAD,IAAS;AAC7BF,QAAAA,SAAS,CAACG,IAAV,CAAe,EAAE,GAAGD,GAAG,CAACE,IAAJ,EAAL;AAAiBC,UAAAA,EAAE,EAAEH,GAAG,CAACG;AAAzB,SAAf;AACD,OAFD;AAGAV,MAAAA,OAAO,CAACK,SAAD,CAAP;AACD,KANuB,CAAxB;AAQA,WAAO,MAAMH,QAAQ,EAArB;AACD,GAXQ,EAWN,CAACP,UAAD,CAXM,CAAT;AAaA,SAAO;AAAEI,IAAAA;AAAF,GAAP;AACD,CAjBD;;AAmBA,eAAeF,YAAf","sourcesContent":["import { useState, useEffect } from 'react';\nimport { onSnapshot, collection } from 'firebase/firestore';\nimport { projectFirestore } from '../firebase/config';\n\nconst useFirestore = (collectionName) => {\n  const [docs, setDocs] = useState([]);\n\n  useEffect(() => {\n    const collectionRef = collection(projectFirestore, collectionName);\n    const unsubCol = orderBy(collectionRef, (snapshot) => {\n      let documents = [];\n      snapshot.docs.forEach((doc) => {\n        documents.push({ ...doc.data(), id: doc.id });\n      });\n      setDocs(documents);\n    });\n\n    return () => unsubCol();\n  }, [collection]);\n\n  return { docs };\n};\n\nexport default useFirestore;\n"]},"metadata":{},"sourceType":"module"}